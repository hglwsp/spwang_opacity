import numpy as np
import matplotlib.pyplot as plt
import math
import random
#import tensorflow as tf
from sympy import *
import sympy as sp
import torch
import torch.nn as nn

x1 = symbols("x1")  # 符号x，自变量
x2 = symbols("x2")
x3 = symbols("x3")
x4 = symbols("x4")
x5 = symbols("x5")



z = symbols("tanh")
z1 = symbols("tanh")

# y = 0.792*pow(x1-1,2)#公式
# apart(y,x1)



w1=np.array([
    [-0.19960276184180673, 2.0393855582493488, 0.45852598453416793, -0.21488189742575983, 0.70607889030544],[ 0.17003329145726176, 1.245540959288925, 1.3150936473981583, 0.774037272970213, 0.08822666862856998],[ 0.1729500646944032, 1.51216000532693, 2.406101638663351, 0.023069807982413894, -0.19734995738433156],[ 0.1339476069632515, -2.1815880985613507, 0.7110339305816544, -2.3687772324682776, 1.1577523545105535],[ 0.2624241962725436, -2.380010380866561, 0.5860178243271922, 0.6132243293703502, 2.2312181179243167]
]).T
b1= \
    [0,0,0,0,0]
expr1 =  z*(np.matmul([[x1,x2,x3,x4,x5]],w1)+b1)
#expr1 = -0.0001711589065517019 *pow(expr1,4)+ -0.01447711943585072 *pow(expr1,3)+ 0.002849795794085815 *pow(expr1,2)+ 0.5071116596907747 *expr1+ -0.00508383030596129
# expr1_1 = 0.25 * expr1 * expr1 + 0.001
# expr1 = 0.5 * expr1 + pow(expr1_1,0.5)

w2 =np.array(
[-0.07146218046830881, 0.07912017508519865, -0.12158090235444627, -0.044772264388292585, -0.0366888195225797]
).T
b2=   [0]

expr2 =  np.matmul(expr1,w2)+b2
print(expr2)
# expr3 = simplify(expr2)
# print(expr3)